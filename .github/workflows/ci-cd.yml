name: Monolith CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # STAGE 1: Linting and Testing
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Frontend setup
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install frontend deps
        working-directory: ./client
        run: npm ci

      - name: Run frontend tests
        working-directory: ./client
        run: npm test

      # Backend setup
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install backend deps
        working-directory: ./server
        run: |
          pip install -r requirements.txt
          pip install pytest

      - name: Run backend tests
        working-directory: ./server
        run: pytest

  # STAGE 2: Build Docker Images
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push frontend
        working-directory: ./client
        run: |
          docker build -t $DOCKER_REGISTRY/$IMAGE_NAME-frontend:${{ github.sha }} .
          docker push $DOCKER_REGISTRY/$IMAGE_NAME-frontend:${{ github.sha }}

      - name: Build and push backend
        working-directory: ./server
        run: |
          docker build -t $DOCKER_REGISTRY/$IMAGE_NAME-backend:${{ github.sha }} .
          docker push $DOCKER_REGISTRY/$IMAGE_NAME-backend:${{ github.sha }}

  # STAGE 3: Deployment
  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'  
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker pull $DOCKER_REGISTRY/$IMAGE_NAME-frontend:${{ github.sha }}
            docker pull $DOCKER_REGISTRY/$IMAGE_NAME-backend:${{ github.sha }}
            docker-compose down
            docker-compose up -d
